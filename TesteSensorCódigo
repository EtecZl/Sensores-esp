void setup()
{
  pinMode(0, OUTPUT); // Motor A +
  pinMode(5, OUTPUT); // Motor A-
  pinMode(11, OUTPUT); // Enable 1&2
  pinMode(10, OUTPUT); // Enable 3&4 
  pinMode (4, OUTPUT); // Motor B -
  pinMode (2, OUTPUT); // Motor B + 
  pinMode(6, INPUT);   // L1
  pinMode(5, INPUT);   // L2
  pinMode(4, INPUT);   // M
  pinMode(13, INPUT);   // R2
 
  pinMode(12, INPUT);   // R1
}

 

void loop()
{
  if((digitalRead(6 )== 1) && (digitalRead(5) == 1) && (digitalRead(4) == 0) && (digitalRead(13)== 1) && (digitalRead(13) == 1));
  {forward();} // calling functions
  if((digitalRead(6 )== 1) && (digitalRead(5) == 1) && (digitalRead(4) == 1) && (digitalRead(13)== 1) && (digitalRead(13) == 1));
  {backward();}
  if((digitalRead(6 )== 1) && (digitalRead(5) == 0) && (digitalRead(4) == 0) && (digitalRead(13)== 1) && (digitalRead(13) == 1));
  {left_s();}
  if((digitalRead(6 )== 0) && (digitalRead(5) == 0) && (digitalRead(4) == 0) && (digitalRead(13)== 1) && (digitalRead(13) == 1));
  {left_f();}
  if((digitalRead(6 )== 1) && (digitalRead(5) == 0) && (digitalRead(4) == 1) && (digitalRead(13)== 1) && (digitalRead(13) == 1));
  {left();}
  if((digitalRead(6 )== 1) && (digitalRead(5) == 1) && (digitalRead(4) == 0) && (digitalRead(13)== 0) && (digitalRead(13) == 1));
  {right_s();}
  if((digitalRead(6 )== 1) && (digitalRead(5) == 1) && (digitalRead(4) == 0) && (digitalRead(13)== 0) && (digitalRead(13) == 0));
  {right_f();}
  if((digitalRead(6 )== 1) && (digitalRead(5) == 1) && (digitalRead(4) == 1) && (digitalRead(13)== 0) && (digitalRead(13) == 1));
  {right();}
  if((digitalRead(6 )== 0) && (digitalRead(5) == 0) && (digitalRead(4) == 0) && (digitalRead(13)== 0) && (digitalRead(13) == 0));
  {stop();}
}

 

// Declaring Functions
void forward()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2 HIGH);
  analogWrite(11, 80);
  analogWrite(10, 80);
  
}
void backward()
{
  digitalWrite(0, LOW);
  digitalWrite(5, HIGH);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 60);
  analogWrite(10, 60);
}
void left_s()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 70);
  analogWrite(10, 60);
}
void left_f()
{
  digitalWrite(0, LOW);
  digitalWrite(5, HIGH);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 60);
  analogWrite(10, 60);
}
void left()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 70);
  analogWrite(10, 50);
}
void right_s()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 60);
  analogWrite(10, 70);
}
void right_f()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, HIGH);
  digitalWrite(2, LOW);
  analogWrite(11, 60);
  analogWrite(10, 60);
}
void right()
{
  digitalWrite(0, HIGH);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2, HIGH);
  analogWrite(11, 50);
  analogWrite(10, 70);
}
void stop()
{
  digitalWrite(0, LOW);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(2, LOW);
  analogWrite(11, 0);
  analogWrite(10, 0);
}
